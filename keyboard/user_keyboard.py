import asyncio
from aiogram import Router
from aiogram.types import KeyboardButton, InlineKeyboardButton,ReplyKeyboardMarkup, InlineKeyboardMarkup, CallbackQuery
from api_3xui.tariff_key_generator import key_trial


router = Router()

# -----------------------------------
# üîπ –§–£–ù–ö–¶–ò–ò –°–û–ó–î–ê–ù–ò–Ø –ö–õ–ê–í–ò–ê–¢–£–†
# -----------------------------------

async def main_menu_keyboard() -> ReplyKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é (ReplyKeyboard)."""
    keyboard_layout = [
        [KeyboardButton(text='–û—Å—Ç–∞—Ç–æ–∫ –¥–Ω–µ–π'), KeyboardButton(text='‚öôÔ∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∏ üîë –ö–ª—é—á')],
        [KeyboardButton(text='üí∏ –û–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É'), KeyboardButton(text='ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞')],
        [KeyboardButton(text='üì∫ –ö–∞–Ω–∞–ª'), KeyboardButton(text='üéÅ –ü—Ä–æ–º–æ–∫–æ–¥')],
        [KeyboardButton(text='üÜò –ü–æ–º–æ—â—å')],
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard_layout, resize_keyboard=True)

async def trial_button() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫—É –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞."""
    return InlineKeyboardMarkup(
        inline_keyboard=[[InlineKeyboardButton(text='üéÅ –¢–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥', callback_data='trial')]]
    )

async def inline_price() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ —Å —Ç–∞—Ä–∏—Ñ–∞–º–∏."""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text='üî• 1 –º–µ—Å—è—Ü - 199‚ÇΩ', callback_data='tariff_1_month')],
            [InlineKeyboardButton(text='üî• 3 –º–µ—Å—è—Ü–∞ - 569‚ÇΩ', callback_data='tariff_3_months')],
            [InlineKeyboardButton(text='üî• 6 –º–µ—Å—è—Ü–µ–≤ - 1099‚ÇΩ', callback_data='tariff_6_months')],
            [InlineKeyboardButton(text='üî• 12 –º–µ—Å—è—Ü–µ–≤ - 2099‚ÇΩ', callback_data='tariff_12_months')],
        ]
    )





# -----------------------------------
# üîπ –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò CALLBACK-–ó–ê–ü–†–û–°–û–í
# -----------------------------------

async def trial_button_callback(query: CallbackQuery):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–ª—é—á–∞."""
    telegram_id = query.from_user.id
    tariff_name = 'trial'

    key_data = await key_trial(telegram_id, tariff_name)

    if key_data:
        await query.answer(text="‚è≥–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª—é—á–∞...")
        await query.bot.send_message(chat_id=telegram_id, text="–í–∞—à —Ç–µ—Å—Ç–æ–≤—ã–π –∫–ª—é—á –Ω–∏–∂–µüëá:")
        await query.bot.send_message(chat_id=telegram_id, text=f"```\n{key_data}\n```", parse_mode='MarkdownV2')
    else:
        await query.answer(text="–ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –∫–ª—é—á.")

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ callback-–∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
@router.callback_query(lambda query: query.data == 'trial')
async def trial_button_callback_handler(query: CallbackQuery):
    await trial_button_callback(query)
